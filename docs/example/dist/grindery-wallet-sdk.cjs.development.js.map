{"version":3,"file":"grindery-wallet-sdk.cjs.development.js","sources":["../src/provider/ProviderError.ts","../src/provider/ProviderEventEmitter.ts","../src/provider/ProviderLocalStorage.ts","../src/provider/GrinderyWalletProvider.ts","../src/sdk/GrinderyWalletSDK.ts","../src/index.ts"],"sourcesContent":["export class ProviderError extends Error {\n  name: string = 'GrinderyWalletProviderError';\n  code?: number;\n  data?: unknown;\n\n  constructor(message: string, code?: number, data?: unknown) {\n    super(message);\n    this.code = code;\n    this.data = data;\n  }\n}\n","export class ProviderEventEmitter {\n  private events: Map<string, Array<Function>>;\n\n  constructor() {\n    this.events = new Map();\n  }\n\n  on(event: string, callback: Function) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)!.push(callback);\n    return this;\n  }\n\n  removeListener(event: string, callback: Function) {\n    if (this.events.has(event)) {\n      const callbacks = this.events.get(event)!.filter(cb => cb !== callback);\n      this.events.set(event, callbacks);\n    }\n    return this;\n  }\n\n  protected emit(event: string, ...data: any[]) {\n    if (this.events.has(event)) {\n      console.log('[GrinderyWalletProvider] > Event:', event, data);\n      this.events.get(event)!.forEach(callback => {\n        callback(...data);\n      });\n    }\n    return this;\n  }\n}\n","import { ProviderEventEmitter } from './ProviderEventEmitter';\nimport { ProviderStorage, ProviderStorageKey } from './types';\n\nconst LOCALSTORAGE_KEY = 'GrinderyWalletProvider';\n\nexport class ProviderLocalStorage extends ProviderEventEmitter {\n  protected getStorageValue(key: ProviderStorageKey): string {\n    const value = this.getStorage()[key] || '';\n    return value;\n  }\n\n  protected setStorageValue(key: ProviderStorageKey, value: string): void {\n    const storage = this.getStorage();\n    storage[key] = value;\n    this.saveStorage(storage);\n  }\n\n  private getStorage(): ProviderStorage {\n    try {\n      return JSON.parse(\n        localStorage.getItem(LOCALSTORAGE_KEY) || '{}'\n      ) as ProviderStorage;\n    } catch (error) {\n      localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify({}));\n      throw new Error('Error parsing storage');\n    }\n  }\n\n  private saveStorage(storage: ProviderStorage): void {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(storage));\n  }\n}\n","import { ProviderError } from './ProviderError';\nimport { ProviderLocalStorage } from './ProviderLocalStorage';\nimport {\n  GrinderyRpcMethodName,\n  ProviderInterface,\n  ProviderMethods,\n  ProviderPairingResult,\n  ProviderRequestPairingResult,\n  RequestArguments,\n  RequestArgumentsParams,\n} from './types';\n\nexport class GrinderyWalletProvider extends ProviderLocalStorage\n  implements ProviderInterface {\n  public readonly isGrinderyWallet: boolean = true;\n\n  constructor() {\n    super();\n    this.injectProvider();\n  }\n\n  public isConnected(): boolean {\n    return !!this.chainId;\n  }\n\n  public isWalletConnected(): boolean {\n    return this.isConnected() && !!this.getStorageValue('sessionId');\n  }\n\n  public isWalletConnectionPending(): boolean {\n    return this.isConnected() && !!this.getStorageValue('pairingToken');\n  }\n\n  public async request<T>({ method, params }: RequestArguments): Promise<T> {\n    if (method !== 'wallet_ping' && !this.chainId) {\n      throw new ProviderError('Disconnected', 4900);\n    }\n    if (!this.methods[method]) {\n      throw new ProviderError('Unsupported Method', 4200);\n    }\n\n    try {\n      if (this.methods[method].sessionRequired && !this.isWalletConnected()) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      if (\n        this.methods[method].pairingTokenRequired &&\n        !this.isWalletConnectionPending()\n      ) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      return (await this.methods[method].execute(params)) as T;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  private appId: string = window.location.origin || 'localhost';\n  private chainId: string = 'eip155:137';\n\n  /* Avaialble provider `request` methods */\n  private methods: ProviderMethods = {\n    eth_requestAccounts: {\n      sessionRequired: false,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n        if (this.isWalletConnected()) {\n          try {\n            return await this.request<string[]>({\n              method: 'eth_accounts',\n              params: params || [],\n            });\n          } catch (error) {\n            this.setStorageValue('sessionId', '');\n            // skip failed request and continue with pairing\n          }\n        }\n        if (this.isWalletConnectionPending()) {\n          try {\n            this.emit('restorePairing', {\n              connectUrl: this.getStorageValue('connectUrl'),\n              connectUrlBrowser: this.getStorageValue('connectUrlBrowser'),\n            });\n\n            const pairResult = await this.request<ProviderPairingResult>({\n              method: 'checkout_waitForPairingResult',\n              params: { pairingToken: this.getStorageValue('pairingToken') },\n            });\n\n            this.setStorageValue('sessionId', pairResult.sessionId);\n            this.setStorageValue('pairingToken', '');\n            this.setStorageValue('connectUrl', '');\n            this.setStorageValue('connectUrlBrowser', '');\n\n            if (!pairResult.sessionId) {\n              throw new ProviderError('Pairing failed', 4900);\n            }\n\n            return [];\n          } catch (error) {\n            this.setStorageValue('sessionId', '');\n            this.setStorageValue('pairingToken', '');\n            this.setStorageValue('connectUrl', '');\n            this.setStorageValue('connectUrlBrowser', '');\n            // skip failed request and continue with pairing\n          }\n        }\n        try {\n          const result = await this.request<ProviderRequestPairingResult>({\n            method: 'checkout_requestPairing',\n            params: { appId: this.appId },\n          });\n\n          if (!result.pairingToken || !result.connectUrl) {\n            throw new ProviderError('Pairing failed', 4900);\n          }\n\n          this.setStorageValue('pairingToken', result.pairingToken);\n          this.setStorageValue('connectUrl', result.connectUrl);\n          this.setStorageValue('connectUrlBrowser', result.connectUrlBrowser);\n          this.emit('pairing', {\n            connectUrl: result.connectUrl,\n            connectUrlBrowser: result.connectUrlBrowser,\n          });\n          const pairResult = await this.request<ProviderPairingResult>({\n            method: 'checkout_waitForPairingResult',\n            params: { pairingToken: result.pairingToken },\n          });\n\n          this.setStorageValue('sessionId', pairResult.sessionId);\n\n          if (!pairResult.sessionId) {\n            throw new ProviderError('Pairing failed', 4900);\n          }\n          return await this.sendGrinderyRpcApiRequest<string[]>(\n            'checkout_request',\n            {\n              sessionId: pairResult.sessionId,\n              scope: this.chainId,\n              request: {\n                method: 'eth_accounts',\n                params,\n              },\n            }\n          );\n        } catch (error) {\n          throw this.createProviderRpcError(error);\n        }\n      },\n    },\n    checkout_requestPairing: {\n      sessionRequired: false,\n      pairingTokenRequired: false,\n      execute: async (\n        params?: RequestArgumentsParams\n      ): Promise<ProviderRequestPairingResult> => {\n        return await this.sendGrinderyRpcApiRequest<\n          ProviderRequestPairingResult\n        >('checkout_requestPairing', params);\n      },\n    },\n    checkout_waitForPairingResult: {\n      sessionRequired: false,\n      pairingTokenRequired: true,\n      execute: async (\n        params?: RequestArgumentsParams\n      ): Promise<ProviderRequestPairingResult> => {\n        return await this.sendGrinderyRpcApiRequest<\n          ProviderRequestPairingResult\n        >('checkout_waitForPairingResult', params);\n      },\n    },\n    eth_accounts: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n        return await this.sendGrinderyRpcApiRequest<string[]>(\n          'checkout_request',\n          {\n            sessionId: this.getStorageValue('sessionId'),\n            scope: this.chainId,\n            request: {\n              method: 'eth_accounts',\n              params: params || [],\n            },\n          }\n        );\n      },\n    },\n    eth_sendTransaction: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n        if (!this.isWalletConnected()) {\n          throw new ProviderError('Unauthorized', 4900);\n        }\n        return await this.sendGrinderyRpcApiRequest<string[]>(\n          'checkout_request',\n          {\n            sessionId: this.getStorageValue('sessionId'),\n            scope: this.chainId,\n            request: {\n              method: 'eth_sendTransaction',\n              params: params || [],\n            },\n          }\n        );\n      },\n    },\n    personal_sign: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string> => {\n        if (!this.isWalletConnected()) {\n          throw new ProviderError('Unauthorized', 4900);\n        }\n        return await this.sendGrinderyRpcApiRequest<string>(\n          'checkout_request',\n          {\n            sessionId: this.getStorageValue('sessionId'),\n            scope: this.chainId,\n            request: {\n              method: 'personal_sign',\n              params: params || [],\n            },\n          }\n        );\n      },\n    },\n  };\n\n  private injectProvider(): void {\n    if (!window.ethereum) {\n      window.ethereum = this;\n    } else {\n      if (\n        window.ethereum.providers &&\n        Array.isArray(window.ethereum.providers)\n      ) {\n        window.ethereum.providers.push(this);\n      } else {\n        window.ethereum.providers = [window.ethereum, this];\n      }\n    }\n\n    addEventListener('load', () => {\n      setTimeout(() => {\n        this.emit('connect', { chainId: this.chainId });\n      }, 1000);\n    });\n  }\n\n  private createProviderRpcError(error: unknown): ProviderError {\n    let errorResponse: ProviderError;\n    if (error instanceof ProviderError) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = error.code || 4900;\n      errorResponse.data = error.data;\n    } else if (error instanceof Error) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = 4900;\n    } else {\n      errorResponse = new ProviderError('Unknown error');\n      errorResponse.code = 4900;\n    }\n    return errorResponse;\n  }\n\n  private async sendGrinderyRpcApiRequest<T>(\n    method: GrinderyRpcMethodName,\n    params?: RequestArgumentsParams\n  ): Promise<T> {\n    try {\n      const response = await fetch('https://walletconnect-api.grindery.com', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method,\n          params: params || [],\n        }),\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new ProviderError(data.error.message, data.error.code);\n      }\n      if (!data.result) {\n        throw new ProviderError('No result', 4900);\n      }\n      return data.result;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n}\n","import { GrinderyWalletProvider } from '../provider/GrinderyWalletProvider';\n\nexport class GrinderyWalletSDK {\n  public provider: GrinderyWalletProvider;\n\n  constructor() {\n    this.provider = this.getWeb3Provider();\n  }\n\n  private getWeb3Provider(): GrinderyWalletProvider {\n    let provider = window.ethereum?.providers?.find(\n      (provider: GrinderyWalletProvider | unknown) =>\n        provider instanceof GrinderyWalletProvider && provider.isGrinderyWallet\n    );\n    if (\n      !provider &&\n      window.ethereum instanceof GrinderyWalletProvider &&\n      window.ethereum.isGrinderyWallet\n    ) {\n      provider = window.ethereum;\n    }\n    if (!provider) {\n      provider = new GrinderyWalletProvider();\n    }\n    return provider;\n  }\n}\n","import { GrinderyWalletSDK } from './sdk/GrinderyWalletSDK';\n\ndeclare global {\n  interface Window {\n    Telegram?: any;\n    ethereum?: any;\n    Grindery?: {\n      WalletSDK?: GrinderyWalletSDK;\n    };\n  }\n}\n\nfunction init() {\n  if (\n    !window.Grindery?.WalletSDK ||\n    !(window.Grindery.WalletSDK instanceof GrinderyWalletSDK)\n  ) {\n    window.Grindery = {\n      ...(window.Grindery || {}),\n      WalletSDK: new GrinderyWalletSDK(),\n    };\n  }\n}\n\n// Initialize the SDK when the page is loaded\ninit();\n"],"names":["ProviderError","_Error","message","code","data","_this","call","_inheritsLoose","_wrapNativeSuper","Error","ProviderEventEmitter","events","Map","_proto","prototype","on","event","callback","has","set","get","push","removeListener","callbacks","filter","cb","emit","Array","_len","_key","arguments","console","log","forEach","apply","LOCALSTORAGE_KEY","ProviderLocalStorage","_ProviderEventEmitter","getStorageValue","key","value","getStorage","setStorageValue","storage","saveStorage","JSON","parse","localStorage","getItem","error","setItem","stringify","GrinderyWalletProvider","_ProviderLocalStorage","window","location","origin","eth_requestAccounts","sessionRequired","pairingTokenRequired","execute","_execute","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","pairResult","result","_pairResult","wrap","_callee$","_context","prev","next","isWalletConnected","request","method","abrupt","sent","t0","isWalletConnectionPending","connectUrl","connectUrlBrowser","pairingToken","sessionId","t1","appId","sendGrinderyRpcApiRequest","scope","chainId","t2","createProviderRpcError","stop","_x","checkout_requestPairing","_execute2","_callee2","_callee2$","_context2","_x2","checkout_waitForPairingResult","_execute3","_callee3","_callee3$","_context3","_x3","eth_accounts","_execute4","_callee4","_callee4$","_context4","_x4","eth_sendTransaction","_execute5","_callee5","_callee5$","_context5","_x5","personal_sign","_execute6","_callee6","_callee6$","_context6","_x6","injectProvider","isConnected","_request","_callee7","_ref","_callee7$","_context7","methods","_x7","ethereum","providers","isArray","addEventListener","setTimeout","_this2","errorResponse","_sendGrinderyRpcApiRequest","_callee8","response","_callee8$","_context8","fetch","headers","body","jsonrpc","id","json","_x8","_x9","GrinderyWalletSDK","provider","getWeb3Provider","_window$ethereum","find","isGrinderyWallet","init","_window$Grindery","Grindery","WalletSDK","_extends"],"mappings":"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"}