{"version":3,"file":"grindery-wallet-sdk.umd.development.js","sources":["../src/provider/ProviderError.ts","../src/provider/ProviderEventEmitter.ts","../src/provider/ProviderLocalStorage.ts","../src/provider/Provider.ts","../src/provider/GrinderyWalletProvider.ts","../src/sdk/GrinderyWalletSDK.ts","../src/index.ts"],"sourcesContent":["export class ProviderError extends Error {\n  name: string = 'GrinderyWalletProviderError';\n  code?: number;\n  data?: unknown;\n\n  constructor(message: string, code?: number, data?: unknown) {\n    super(message);\n    this.code = code;\n    this.data = data;\n  }\n}\n","/**\n * @summary A class for emitting provider events\n * @since 0.1.0\n */\nexport class ProviderEventEmitter {\n  /**\n   * @summary A map of events and their listeners\n   */\n  private events: Map<string, Array<Function>>;\n\n  constructor() {\n    this.events = new Map();\n  }\n\n  /**\n   * @summary Adds a listener to the provider event\n   * @param {string} event Event name\n   * @param {Function} callback Callback function\n   * @returns {ProviderEventEmitter} The instance of the class itself\n   */\n  on(event: string, callback: Function) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)!.push(callback);\n    return this;\n  }\n\n  /**\n   * @summary Removes a listener from the provider event\n   * @param {string} event Event name\n   * @param {Function} callback Callback function\n   * @returns {ProviderEventEmitter} The instance of the class itself\n   */\n  removeListener(event: string, callback: Function) {\n    if (this.events.has(event)) {\n      const callbacks = this.events.get(event)!.filter(cb => cb !== callback);\n      this.events.set(event, callbacks);\n    }\n    return this;\n  }\n\n  /**\n   * @summary Emits an event\n   * @param {string} event Event name\n   * @param data Event data\n   * @returns {ProviderEventEmitter} The instance of the class itself\n   */\n  protected emit(event: string, ...data: any[]) {\n    if (this.events.has(event)) {\n      console.log('[GrinderyWalletProvider] > Event:', event, data);\n      this.events.get(event)!.forEach(callback => {\n        callback(...data);\n      });\n    }\n    return this;\n  }\n}\n","import { ProviderEventEmitter } from './ProviderEventEmitter';\nimport { ProviderStorage, ProviderStorageKey } from './types';\n\nconst LOCALSTORAGE_KEY = 'GrinderyWalletProvider';\n\n/**\n * @summary A local storage class for the provider\n * @since 0.1.0\n * @extends ProviderEventEmitter\n */\nexport class ProviderLocalStorage extends ProviderEventEmitter {\n  /**\n   * @summary Gets the value of the storage by the key\n   * @param {ProviderStorageKey} key Provider storage key\n   * @returns {string} The value of the storage by the key\n   */\n  protected getStorageValue(key: ProviderStorageKey): string {\n    const value = this.getStorage()[key] || '';\n    return value;\n  }\n\n  /**\n   * @summary Sets the value of the storage by the key\n   * @param {ProviderStorageKey} key Provider storage key\n   * @param {string} value The value to set\n   */\n  protected setStorageValue(key: ProviderStorageKey, value: string): void {\n    const storage = this.getStorage();\n    storage[key] = value;\n    this.saveStorage(storage);\n  }\n\n  private getStorage(): ProviderStorage {\n    try {\n      return JSON.parse(\n        localStorage.getItem(LOCALSTORAGE_KEY) || '{}'\n      ) as ProviderStorage;\n    } catch (error) {\n      localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify({}));\n      throw new Error('Error parsing storage');\n    }\n  }\n\n  private saveStorage(storage: ProviderStorage): void {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(storage));\n  }\n}\n","import { ProviderError } from './ProviderError';\nimport { ProviderLocalStorage } from './ProviderLocalStorage';\nimport {\n  GrinderyRpcMethodName,\n  GrinderyRpcProviderRequestMethodName,\n  ProviderMethods,\n  ProviderRequestResult,\n  RequestArguments,\n  RequestArgumentsParams,\n} from './types';\n\nexport class Provider extends ProviderLocalStorage {\n  constructor() {\n    super();\n\n    this.injectProvider();\n  }\n\n  /**\n   * @returns {boolean} True if the provider is connected to the server.\n   */\n  public isConnected(): boolean {\n    return !!this.chainId;\n  }\n\n  /**\n   * @returns {boolean} True if the provider is connected to the server and the Grindery Wallet.\n   */\n  public isWalletConnected(): boolean {\n    return this.isConnected() && !!this.getStorageValue('sessionId');\n  }\n\n  /**\n   * @returns {boolean} True if the provider is connected to the server and the Grindery Wallet pairing is in progress (pending).\n   */\n  public isWalletConnectionPending(): boolean {\n    return this.isConnected() && !!this.getStorageValue('pairingToken');\n  }\n\n  public async request<T>({ method, params }: RequestArguments): Promise<T> {\n    if (method !== 'wallet_ping' && !this.chainId) {\n      throw new ProviderError('Disconnected', 4900);\n    }\n    if (!this.methods[method]) {\n      throw new ProviderError('Unsupported Method', 4200);\n    }\n\n    try {\n      if (this.methods[method].sessionRequired && !this.isWalletConnected()) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n\n      return (await this.methods[method].execute(params)) as T;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  /**\n   * @summary The application ID.\n   */\n  protected appId: string = window.location.href;\n\n  /**\n   * @summary The chain ID in CAIP-2 format; e.g. \"eip155:1\".\n   */\n  protected chainId: string = 'eip155:137';\n\n  /**\n   * @summary The list of supported provider methods.\n   */\n  protected methods: ProviderMethods = {};\n\n  protected registerProviderMethods(methods: ProviderMethods): void {\n    this.methods = methods;\n  }\n\n  protected async sendGrinderyRpcProviderRequest(\n    method: GrinderyRpcProviderRequestMethodName,\n    params?: readonly unknown[]\n  ): Promise<ProviderRequestResult> {\n    if (!this.getStorageValue('sessionId')) {\n      throw new ProviderError('Unauthorized', 4900);\n    }\n    try {\n      return await this.sendGrinderyRpcApiRequest<ProviderRequestResult>(\n        'checkout_request',\n        {\n          sessionId: this.getStorageValue('sessionId'),\n          scope: this.chainId,\n          request: {\n            method,\n            params,\n          },\n        }\n      );\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  protected async waitGrinderyRpcProviderRequest<T>(\n    requestToken: string,\n    timeout?: number\n  ): Promise<T> {\n    if (!this.getStorageValue('sessionId')) {\n      throw new ProviderError('Unauthorized', 4900);\n    }\n    try {\n      return await this.sendGrinderyRpcApiRequest<T>(\n        'checkout_waitForRequestResult',\n        {\n          requestToken,\n          timeout,\n        }\n      );\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  protected async sendGrinderyRpcApiRequest<T>(\n    method: GrinderyRpcMethodName,\n    params?: RequestArgumentsParams\n  ): Promise<T> {\n    try {\n      const response = await fetch('https://walletconnect-api.grindery.com', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method,\n          params: params || [],\n        }),\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new ProviderError(data.error.message, data.error.code);\n      }\n      if (!data.result) {\n        throw new ProviderError('No result', 4900);\n      }\n      return data.result;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  protected createProviderRpcError(error: unknown): ProviderError {\n    let errorResponse: ProviderError;\n    if (error instanceof ProviderError) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = error.code || 4900;\n      errorResponse.data = error.data;\n    } else if (error instanceof Error) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = 4900;\n    } else {\n      errorResponse = new ProviderError('Unknown error');\n      errorResponse.code = 4900;\n    }\n    return errorResponse;\n  }\n\n  private injectProvider(): void {\n    if (!window.ethereum) {\n      window.ethereum = this;\n    } else {\n      if (\n        window.ethereum.providers &&\n        Array.isArray(window.ethereum.providers)\n      ) {\n        window.ethereum.providers.push(this);\n      } else {\n        window.ethereum.providers = [window.ethereum, this];\n      }\n    }\n\n    addEventListener('load', () => {\n      this.emit('connect', { chainId: this.chainId });\n    });\n  }\n}\n","import { Provider } from './Provider';\nimport { ProviderError } from './ProviderError';\nimport {\n  ProviderInterface,\n  ProviderPairingResult,\n  ProviderRequestPairingResult,\n  RequestArgumentsParams,\n} from './types';\n\n/**\n * @summary The Grindery Wallet Ethereum Injected Provider Class.\n * @extends Provider\n * @implements ProviderInterface\n */\nexport class GrinderyWalletProvider extends Provider\n  implements ProviderInterface {\n  /**\n   * @summary Indicates that the provider is a Grindery Wallet.\n   */\n  public readonly isGrinderyWallet: boolean = true;\n\n  constructor() {\n    super();\n\n    this.registerProviderMethods({\n      /**\n       * @summary Connect a dApp to the Grindery Wallet.\n       * @since 0.1.0\n       * @returns {Promise<string[]>} The list of user wallets' addresses.\n       */\n      eth_requestAccounts: {\n        sessionRequired: false,\n        execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n          if (this.isWalletConnected()) {\n            try {\n              return await this.request<string[]>({\n                method: 'eth_accounts',\n                params: params || [],\n              });\n            } catch (error) {\n              this.setStorageValue('sessionId', '');\n              // skip failed request and continue with pairing\n            }\n          }\n          if (this.isWalletConnectionPending()) {\n            try {\n              this.emit('restorePairing', {\n                connectUrl: this.getStorageValue('connectUrl'),\n                connectUrlBrowser: this.getStorageValue('connectUrlBrowser'),\n              });\n\n              const pairResult = await this.sendGrinderyRpcApiRequest<\n                ProviderPairingResult\n              >('checkout_waitForPairingResult', {\n                pairingToken: this.getStorageValue('pairingToken'),\n              });\n\n              this.setStorageValue('sessionId', pairResult.session.sessionId);\n              this.setStorageValue('pairingToken', '');\n              this.setStorageValue('connectUrl', '');\n              this.setStorageValue('connectUrlBrowser', '');\n\n              if (!pairResult.session.sessionId) {\n                throw new ProviderError('Pairing failed', 4900);\n              }\n\n              return [];\n            } catch (error) {\n              this.setStorageValue('sessionId', '');\n              this.setStorageValue('pairingToken', '');\n              this.setStorageValue('connectUrl', '');\n              this.setStorageValue('connectUrlBrowser', '');\n              // skip failed request and continue with pairing\n            }\n          }\n          try {\n            const result = await this.sendGrinderyRpcApiRequest<\n              ProviderRequestPairingResult\n            >('checkout_requestPairing', { appId: this.appId });\n\n            if (!result.pairingToken || !result.connectUrl) {\n              throw new ProviderError('Pairing failed', 4900);\n            }\n\n            this.setStorageValue('pairingToken', result.pairingToken);\n            this.setStorageValue('connectUrl', result.connectUrl);\n            this.setStorageValue('connectUrlBrowser', result.connectUrlBrowser);\n            this.emit('pairing', {\n              connectUrl: result.connectUrl,\n              connectUrlBrowser: result.connectUrlBrowser,\n            });\n            const pairResult = await this.sendGrinderyRpcApiRequest<\n              ProviderPairingResult\n            >('checkout_waitForPairingResult', {\n              pairingToken: result.pairingToken,\n            });\n\n            this.setStorageValue('sessionId', pairResult.session.sessionId);\n\n            if (!pairResult.session.sessionId) {\n              throw new ProviderError('Pairing failed', 4900);\n            }\n            this.setStorageValue('pairingToken', '');\n            this.setStorageValue('connectUrl', '');\n            this.setStorageValue('connectUrlBrowser', '');\n            if (pairResult.session.namespaces[`eip155`].accounts.length > 0) {\n              return pairResult.session.namespaces[`eip155`].accounts;\n            }\n            return await this.sendGrinderyRpcApiRequest<string[]>(\n              'checkout_request',\n              {\n                sessionId: pairResult.session.sessionId,\n                scope: this.chainId,\n                request: {\n                  method: 'eth_accounts',\n                  params: [],\n                },\n              }\n            );\n          } catch (error) {\n            throw this.createProviderRpcError(error);\n          }\n        },\n      },\n\n      /**\n       * @summary Get a list of user wallets' addresses.\n       * @since 0.1.0\n       * @returns {Promise<string[]>} The list of user wallets' addresses.\n       */\n      eth_accounts: {\n        sessionRequired: true,\n        execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n          try {\n            const { requestToken } = await this.sendGrinderyRpcProviderRequest(\n              'eth_accounts',\n              params ? (Array.isArray(params) ? params : [params]) : []\n            );\n            if (!requestToken) {\n              throw new ProviderError('No request token', 4900);\n            }\n            return await this.waitGrinderyRpcProviderRequest<string[]>(\n              requestToken\n            );\n          } catch (error) {\n            throw this.createProviderRpcError(error);\n          }\n        },\n      },\n      eth_sendTransaction: {\n        sessionRequired: true,\n        execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n          try {\n            const { requestToken } = await this.sendGrinderyRpcProviderRequest(\n              'eth_sendTransaction',\n              params ? (Array.isArray(params) ? params : [params]) : []\n            );\n            if (!requestToken) {\n              throw new ProviderError('No request token', 4900);\n            }\n            return await this.waitGrinderyRpcProviderRequest<string[]>(\n              requestToken\n            );\n          } catch (error) {\n            throw this.createProviderRpcError(error);\n          }\n        },\n      },\n      personal_sign: {\n        sessionRequired: true,\n        execute: async (\n          params?: Partial<RequestArgumentsParams>\n        ): Promise<string> => {\n          try {\n            const { requestToken } = await this.sendGrinderyRpcProviderRequest(\n              'personal_sign',\n              params ? (Array.isArray(params) ? params : [params]) : []\n            );\n            if (!requestToken) {\n              throw new ProviderError('No request token', 4900);\n            }\n            return await this.waitGrinderyRpcProviderRequest(requestToken);\n          } catch (error) {\n            throw this.createProviderRpcError(error);\n          }\n        },\n      },\n    });\n  }\n}\n","import { GrinderyWalletProvider } from '../provider/GrinderyWalletProvider';\n\nexport class GrinderyWalletSDK {\n  public provider: GrinderyWalletProvider;\n\n  constructor() {\n    this.provider = this.getWeb3Provider();\n  }\n\n  private getWeb3Provider(): GrinderyWalletProvider {\n    let provider = window.ethereum?.providers?.find(\n      (provider: GrinderyWalletProvider | unknown) =>\n        provider instanceof GrinderyWalletProvider && provider.isGrinderyWallet\n    );\n    if (\n      !provider &&\n      window.ethereum instanceof GrinderyWalletProvider &&\n      window.ethereum.isGrinderyWallet\n    ) {\n      provider = window.ethereum;\n    }\n    if (!provider) {\n      provider = new GrinderyWalletProvider();\n    }\n    return provider;\n  }\n}\n","import { GrinderyWalletSDK } from './sdk/GrinderyWalletSDK';\n\ndeclare global {\n  interface Window {\n    Telegram?: any;\n    ethereum?: any;\n    Grindery?: {\n      WalletSDK?: GrinderyWalletSDK;\n    };\n  }\n}\n\nfunction init() {\n  if (\n    !window.Grindery?.WalletSDK ||\n    !(window.Grindery.WalletSDK instanceof GrinderyWalletSDK)\n  ) {\n    window.Grindery = {\n      ...(window.Grindery || {}),\n      WalletSDK: new GrinderyWalletSDK(),\n    };\n  }\n}\n\n// Initialize the SDK when the page is loaded\ninit();\n"],"names":["ProviderError","_Error","message","code","data","_this","call","_inheritsLoose","_wrapNativeSuper","Error","ProviderEventEmitter","events","Map","_proto","prototype","on","event","callback","has","set","get","push","removeListener","callbacks","filter","cb","emit","Array","_len","_key","arguments","console","log","forEach","apply","LOCALSTORAGE_KEY","ProviderLocalStorage","_ProviderEventEmitter","getStorageValue","key","value","getStorage","setStorageValue","storage","saveStorage","JSON","parse","localStorage","getItem","error","setItem","stringify","Provider","_ProviderLocalStorage","window","location","href","injectProvider","isConnected","chainId","isWalletConnected","isWalletConnectionPending","request","_request","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","method","params","wrap","_callee$","_context","prev","next","methods","sessionRequired","execute","abrupt","sent","t0","createProviderRpcError","stop","_x","registerProviderMethods","sendGrinderyRpcProviderRequest","_sendGrinderyRpcProviderRequest","_callee2","_callee2$","_context2","sendGrinderyRpcApiRequest","sessionId","scope","_x2","_x3","waitGrinderyRpcProviderRequest","_waitGrinderyRpcProviderRequest","_callee3","requestToken","timeout","_callee3$","_context3","_x4","_x5","_sendGrinderyRpcApiRequest","_callee4","response","_callee4$","_context4","fetch","headers","body","jsonrpc","id","json","result","_x6","_x7","errorResponse","ethereum","providers","isArray","addEventListener","_this2","GrinderyWalletProvider","_Provider","eth_requestAccounts","_execute","pairResult","_pairResult","connectUrl","connectUrlBrowser","pairingToken","session","t1","appId","namespaces","accounts","length","t2","eth_accounts","_execute2","_yield$_this$sendGrin","eth_sendTransaction","_execute3","_yield$_this$sendGrin2","personal_sign","_execute4","_yield$_this$sendGrin3","GrinderyWalletSDK","provider","getWeb3Provider","_window$ethereum","find","isGrinderyWallet","init","_window$Grindery","Grindery","WalletSDK","_extends"],"mappings":"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"}