{"version":3,"file":"grindery-wallet-sdk.umd.production.min.js","sources":["../src/provider/ProviderError.ts","../src/provider/GrinderyWalletProvider.ts","../src/provider/ProviderLocalStorage.ts","../src/provider/ProviderEventEmitter.ts","../src/sdk/GrinderyWalletSDK.ts","../src/index.ts"],"sourcesContent":["export class ProviderError extends Error {\n  name: string = 'GrinderyWalletProviderError';\n  code?: number;\n  data?: unknown;\n\n  constructor(message: string, code?: number, data?: unknown) {\n    super(message);\n    this.code = code;\n    this.data = data;\n  }\n}\n","import { ProviderError } from './ProviderError';\nimport { ProviderLocalStorage } from './ProviderLocalStorage';\nimport {\n  AppData,\n  ProviderInterface,\n  ProviderMethods,\n  RequestArguments,\n  RequestArgumentsParams,\n} from './types';\n\nexport class GrinderyWalletProvider extends ProviderLocalStorage\n  implements ProviderInterface {\n  public readonly isGrinderyWallet: boolean = true;\n\n  constructor() {\n    super();\n    this.appData = {\n      name: document.title,\n      uri: `gw:${btoa(window.location.origin)}`,\n    };\n\n    this.injectProvider();\n  }\n\n  public isConnected(): boolean {\n    return !!this.chainId;\n  }\n\n  public isAccountsConnected(): boolean {\n    return this.accounts.length > 0;\n  }\n\n  public async request<T>({ method, params }: RequestArguments): Promise<T> {\n    if (method !== 'wallet_ping' && !this.chainId) {\n      throw new ProviderError('Disconnected', 4900);\n    }\n    if (!this.methods[method]) {\n      throw new ProviderError('Unsupported Method', 4200);\n    }\n\n    try {\n      return (await this.methods[method](params)) as T;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  private accessToken: string = '';\n  private accounts: string[] = [];\n  private appData: AppData;\n  private chainId: string = '';\n\n  /* Avaialble `request` methods */\n  private methods: ProviderMethods = {\n    eth_accounts: async (_?: RequestArgumentsParams): Promise<string[]> => {\n      if (!this.accessToken || this.accounts.length === 0) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      return this.accounts;\n    },\n    eth_requestAccounts: async (\n      params?: RequestArgumentsParams\n    ): Promise<string[]> => {\n      if (this.accessToken && this.accounts.length > 0) {\n        return this.accounts;\n      }\n      try {\n        const result = await this.sendGrinderyRpcApiRequest<{\n          success: boolean;\n          address?: string;\n          sessionToken?: string;\n        }>('pair', {\n          ...params,\n          uri: this.appData.uri,\n          userId: this.getStorageValue('userId'),\n        });\n        if (\n          result.success &&\n          result.address &&\n          new RegExp(/^0x[0-9a-fA-F]{40}$/).test(result.address)\n        ) {\n          this.setStorageValue('address', result.address);\n          this.accounts = [result.address];\n          this.emit('accountsChanged', { accounts: this.accounts });\n          return this.accounts;\n        }\n        throw new ProviderError('Pairing failed', 4900);\n      } catch (error) {\n        throw this.createProviderRpcError(error);\n      }\n    },\n    eth_sendTransaction: async (\n      params?: RequestArgumentsParams\n    ): Promise<string[]> => {\n      if (!this.accessToken || this.accounts.length === 0) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      return await this.sendGrinderyRpcApiRequest<string[]>(\n        'eth_sendTransaction',\n        params\n      );\n    },\n  };\n\n  private injectProvider(): void {\n    if (!window.ethereum) {\n      window.ethereum = this;\n    } else {\n      if (\n        window.ethereum.providers &&\n        Array.isArray(window.ethereum.providers)\n      ) {\n        window.ethereum.providers.push(this);\n      } else {\n        window.ethereum.providers = [window.ethereum, this];\n      }\n    }\n\n    this.connect();\n  }\n\n  private async connect(): Promise<void> {\n    try {\n      // TODO replace with real async handshake?\n      setTimeout(() => {\n        this.chainId = '0x89';\n        if (this.getStorageValue('address')) {\n          this.accounts = [this.getStorageValue('address')];\n        }\n        this.emit('connect', { chainId: this.chainId });\n      }, 100);\n    } catch (error) {\n      this.emit('disconnect', { error: this.createProviderRpcError(error) });\n    }\n  }\n\n  private createProviderRpcError(error: unknown): ProviderError {\n    let errorResponse: ProviderError;\n    if (error instanceof ProviderError) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = error.code || 4900;\n      errorResponse.data = error.data;\n    } else if (error instanceof Error) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = 4900;\n    } else {\n      errorResponse = new ProviderError('Unknown error');\n      errorResponse.code = 4900;\n    }\n    return errorResponse;\n  }\n\n  private async sendGrinderyRpcApiRequest<T>(\n    method: string,\n    params?: RequestArgumentsParams\n  ): Promise<T> {\n    try {\n      const response = await fetch('https://walletconnect-api.grindery.com', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method,\n          params,\n        }),\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new ProviderError(data.error.message, data.error.code);\n      }\n      if (!data.result) {\n        throw new ProviderError('No result', 4900);\n      }\n      return data.result;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n}\n","import { ProviderEventEmitter } from './ProviderEventEmitter';\nimport { ProviderStorage, ProviderStorageKey } from './types';\n\nconst LOCALSTORAGE_KEY = 'GrinderyWalletProvider';\n\nexport class ProviderLocalStorage extends ProviderEventEmitter {\n  constructor() {\n    super();\n    const userId = this.getStorageValue('userId');\n    if (!userId) {\n      this.setStorageValue(\n        'userId',\n        window.Telegram?.WebApp?.initDataUnsafe?.user?.id || ''\n      );\n    }\n  }\n\n  protected getStorageValue(key: ProviderStorageKey): string {\n    const value = this.getStorage()[key] || '';\n    return value;\n  }\n\n  protected setStorageValue(key: ProviderStorageKey, value: string): void {\n    const storage = this.getStorage();\n    storage[key] = value;\n    this.saveStorage(storage);\n  }\n\n  private getStorage(): ProviderStorage {\n    try {\n      return JSON.parse(\n        localStorage.getItem(LOCALSTORAGE_KEY) || '{}'\n      ) as ProviderStorage;\n    } catch (error) {\n      localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify({}));\n      throw new Error('Error parsing storage');\n    }\n  }\n\n  private saveStorage(storage: ProviderStorage): void {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(storage));\n  }\n}\n","export class ProviderEventEmitter {\n  private events: Map<string, Array<Function>>;\n\n  constructor() {\n    this.events = new Map();\n  }\n\n  on(event: string, callback: Function) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)!.push(callback);\n    return this;\n  }\n\n  removeListener(event: string, callback: Function) {\n    if (this.events.has(event)) {\n      const callbacks = this.events.get(event)!.filter(cb => cb !== callback);\n      this.events.set(event, callbacks);\n    }\n    return this;\n  }\n\n  protected emit(event: string, ...data: any[]) {\n    if (this.events.has(event)) {\n      console.log('[GrinderyWalletProvider] > Event:', event, data);\n      this.events.get(event)!.forEach(callback => {\n        callback(...data);\n      });\n    }\n    return this;\n  }\n}\n","import { GrinderyWalletProvider } from '../provider/GrinderyWalletProvider';\n\nexport class GrinderyWalletSDK {\n  public provider: GrinderyWalletProvider;\n\n  constructor() {\n    this.provider = this.getWeb3Provider();\n  }\n\n  private getWeb3Provider(): GrinderyWalletProvider {\n    let provider = window.ethereum?.providers?.find(\n      (provider: GrinderyWalletProvider | unknown) =>\n        provider instanceof GrinderyWalletProvider && provider.isGrinderyWallet\n    );\n    if (\n      !provider &&\n      window.ethereum instanceof GrinderyWalletProvider &&\n      window.ethereum.isGrinderyWallet\n    ) {\n      provider = window.ethereum;\n    }\n    if (!provider) {\n      provider = new GrinderyWalletProvider();\n    }\n    return provider;\n  }\n}\n","import { GrinderyWalletSDK } from './sdk/GrinderyWalletSDK';\n\ndeclare global {\n  interface Window {\n    Telegram?: any;\n    ethereum?: any;\n    Grindery?: {\n      WalletSDK?: GrinderyWalletSDK;\n    };\n  }\n}\n\nfunction init(_: Event) {\n  if (\n    !window.Grindery?.WalletSDK ||\n    !(window.Grindery.WalletSDK instanceof GrinderyWalletSDK)\n  ) {\n    window.Grindery = {\n      ...(window.Grindery || {}),\n      WalletSDK: new GrinderyWalletSDK(),\n    };\n  }\n}\n\n// Initialize the SDK when the page is loaded\naddEventListener('load', init);\n"],"names":["ProviderError","_Error","message","code","data","_this","call","_inheritsLoose","_wrapNativeSuper","Error","GrinderyWalletProvider","_ProviderLocalStorage","_eth_sendTransaction","_eth_requestAccounts","_eth_accounts","eth_accounts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","wrap","_context","prev","next","accessToken","accounts","length","abrupt","stop","_x","apply","arguments","eth_requestAccounts","_callee2","params","result","_context2","sendGrinderyRpcApiRequest","_extends","uri","appData","userId","getStorageValue","sent","success","address","RegExp","test","setStorageValue","emit","t0","createProviderRpcError","_x2","eth_sendTransaction","_callee3","_context3","_x3","name","document","title","btoa","window","location","origin","injectProvider","_proto","prototype","isConnected","this","chainId","isAccountsConnected","request","_request","_callee4","_ref","method","_context4","methods","_x4","ethereum","providers","Array","isArray","push","connect","_connect","_callee5","_this2","_context5","setTimeout","error","errorResponse","_sendGrinderyRpcApiRequest","_callee6","response","_context6","fetch","headers","Content-Type","body","JSON","stringify","jsonrpc","id","json","_x5","_x6","_ProviderEventEmitter","ProviderLocalStorage","_window$Telegram","Telegram","WebApp","initDataUnsafe","user","key","getStorage","value","storage","saveStorage","parse","localStorage","getItem","setItem","ProviderEventEmitter","events","Map","on","event","callback","has","set","get","removeListener","callbacks","filter","cb","_len","_key","console","log","forEach","GrinderyWalletSDK","provider","getWeb3Provider","_window$ethereum","find","isGrinderyWallet","addEventListener","_window$Grindery","Grindery","WalletSDK"],"mappings":"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"}