{"version":3,"file":"grindery-wallet-sdk.cjs.production.min.js","sources":["../src/provider/ProviderError.ts","../src/provider/GrinderyWalletProvider.ts","../src/provider/ProviderLocalStorage.ts","../src/provider/ProviderEventEmitter.ts","../src/sdk/GrinderyWalletSDK.ts","../src/index.ts"],"sourcesContent":["export class ProviderError extends Error {\n  name: string = 'GrinderyWalletProviderError';\n  code?: number;\n  data?: unknown;\n\n  constructor(message: string, code?: number, data?: unknown) {\n    super(message);\n    this.code = code;\n    this.data = data;\n  }\n}\n","import { ProviderError } from './ProviderError';\nimport { ProviderLocalStorage } from './ProviderLocalStorage';\nimport {\n  GrinderyRpcMethodName,\n  ProviderInterface,\n  ProviderMethods,\n  ProviderPairingResult,\n  ProviderRequestPairingResult,\n  RequestArguments,\n  RequestArgumentsParams,\n} from './types';\n\nexport class GrinderyWalletProvider extends ProviderLocalStorage\n  implements ProviderInterface {\n  public readonly isGrinderyWallet: boolean = true;\n\n  constructor() {\n    super();\n    this.injectProvider();\n  }\n\n  public isConnected(): boolean {\n    return !!this.chainId;\n  }\n\n  public isWalletConnected(): boolean {\n    return this.isConnected() && !!this.getStorageValue('sessionId');\n  }\n\n  public isWalletConnectionPending(): boolean {\n    return this.isConnected() && !!this.getStorageValue('pairingToken');\n  }\n\n  public async request<T>({ method, params }: RequestArguments): Promise<T> {\n    if (method !== 'wallet_ping' && !this.chainId) {\n      throw new ProviderError('Disconnected', 4900);\n    }\n    if (!this.methods[method]) {\n      throw new ProviderError('Unsupported Method', 4200);\n    }\n\n    try {\n      if (this.methods[method].sessionRequired && !this.isWalletConnected()) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      if (\n        this.methods[method].pairingTokenRequired &&\n        !this.isWalletConnectionPending()\n      ) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      return (await this.methods[method].execute(params)) as T;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  private appId: string = window.location.origin || 'localhost';\n  private chainId: string = 'eip155:137';\n\n  /* Avaialble provider `request` methods */\n  private methods: ProviderMethods = {\n    eth_requestAccounts: {\n      sessionRequired: false,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n        if (this.isWalletConnected()) {\n          try {\n            return await this.request<string[]>({\n              method: 'eth_accounts',\n              params: params || [],\n            });\n          } catch (error) {\n            this.setStorageValue('sessionId', '');\n            // skip failed request and continue with pairing\n          }\n        }\n        if (this.isWalletConnectionPending()) {\n          try {\n            this.emit('restorePairing', {\n              connectUrl: this.getStorageValue('connectUrl'),\n              connectUrlBrowser: this.getStorageValue('connectUrlBrowser'),\n            });\n\n            const pairResult = await this.request<ProviderPairingResult>({\n              method: 'checkout_waitForPairingResult',\n              params: { pairingToken: this.getStorageValue('pairingToken') },\n            });\n\n            this.setStorageValue('sessionId', pairResult.sessionId);\n            this.setStorageValue('pairingToken', '');\n            this.setStorageValue('connectUrl', '');\n            this.setStorageValue('connectUrlBrowser', '');\n\n            if (!pairResult.sessionId) {\n              throw new ProviderError('Pairing failed', 4900);\n            }\n\n            return [];\n          } catch (error) {\n            this.setStorageValue('sessionId', '');\n            this.setStorageValue('pairingToken', '');\n            this.setStorageValue('connectUrl', '');\n            this.setStorageValue('connectUrlBrowser', '');\n            // skip failed request and continue with pairing\n          }\n        }\n        try {\n          const result = await this.request<ProviderRequestPairingResult>({\n            method: 'checkout_requestPairing',\n            params: { appId: this.appId },\n          });\n\n          if (!result.pairingToken || !result.connectUrl) {\n            throw new ProviderError('Pairing failed', 4900);\n          }\n\n          this.setStorageValue('pairingToken', result.pairingToken);\n          this.setStorageValue('connectUrl', result.connectUrl);\n          this.setStorageValue('connectUrlBrowser', result.connectUrlBrowser);\n          this.emit('pairing', {\n            connectUrl: result.connectUrl,\n            connectUrlBrowser: result.connectUrlBrowser,\n          });\n          const pairResult = await this.request<ProviderPairingResult>({\n            method: 'checkout_waitForPairingResult',\n            params: { pairingToken: result.pairingToken },\n          });\n\n          this.setStorageValue('sessionId', pairResult.sessionId);\n\n          if (!pairResult.sessionId) {\n            throw new ProviderError('Pairing failed', 4900);\n          }\n          return await this.sendGrinderyRpcApiRequest<string[]>(\n            'checkout_request',\n            {\n              sessionId: pairResult.sessionId,\n              scope: this.chainId,\n              request: {\n                method: 'eth_accounts',\n                params: [],\n              },\n            }\n          );\n        } catch (error) {\n          throw this.createProviderRpcError(error);\n        }\n      },\n    },\n    checkout_requestPairing: {\n      sessionRequired: false,\n      pairingTokenRequired: false,\n      execute: async (\n        params?: RequestArgumentsParams\n      ): Promise<ProviderRequestPairingResult> => {\n        return await this.sendGrinderyRpcApiRequest<\n          ProviderRequestPairingResult\n        >('checkout_requestPairing', params);\n      },\n    },\n    checkout_waitForPairingResult: {\n      sessionRequired: false,\n      pairingTokenRequired: true,\n      execute: async (\n        params?: RequestArgumentsParams\n      ): Promise<ProviderRequestPairingResult> => {\n        return await this.sendGrinderyRpcApiRequest<\n          ProviderRequestPairingResult\n        >('checkout_waitForPairingResult', params);\n      },\n    },\n    eth_accounts: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n        return await this.sendGrinderyRpcApiRequest<string[]>(\n          'checkout_request',\n          {\n            sessionId: this.getStorageValue('sessionId'),\n            scope: this.chainId,\n            request: {\n              method: 'eth_accounts',\n              params: params || [],\n            },\n          }\n        );\n      },\n    },\n    eth_sendTransaction: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n        if (!this.isWalletConnected()) {\n          throw new ProviderError('Unauthorized', 4900);\n        }\n        return await this.sendGrinderyRpcApiRequest<string[]>(\n          'checkout_request',\n          {\n            sessionId: this.getStorageValue('sessionId'),\n            scope: this.chainId,\n            request: {\n              method: 'eth_sendTransaction',\n              params: params || [],\n            },\n          }\n        );\n      },\n    },\n    personal_sign: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string> => {\n        if (!this.isWalletConnected()) {\n          throw new ProviderError('Unauthorized', 4900);\n        }\n        return await this.sendGrinderyRpcApiRequest<string>(\n          'checkout_request',\n          {\n            sessionId: this.getStorageValue('sessionId'),\n            scope: this.chainId,\n            request: {\n              method: 'personal_sign',\n              params: params || [],\n            },\n          }\n        );\n      },\n    },\n  };\n\n  private injectProvider(): void {\n    if (!window.ethereum) {\n      window.ethereum = this;\n    } else {\n      if (\n        window.ethereum.providers &&\n        Array.isArray(window.ethereum.providers)\n      ) {\n        window.ethereum.providers.push(this);\n      } else {\n        window.ethereum.providers = [window.ethereum, this];\n      }\n    }\n\n    addEventListener('load', () => {\n      setTimeout(() => {\n        this.emit('connect', { chainId: this.chainId });\n      }, 1000);\n    });\n  }\n\n  private createProviderRpcError(error: unknown): ProviderError {\n    let errorResponse: ProviderError;\n    if (error instanceof ProviderError) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = error.code || 4900;\n      errorResponse.data = error.data;\n    } else if (error instanceof Error) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = 4900;\n    } else {\n      errorResponse = new ProviderError('Unknown error');\n      errorResponse.code = 4900;\n    }\n    return errorResponse;\n  }\n\n  private async sendGrinderyRpcApiRequest<T>(\n    method: GrinderyRpcMethodName,\n    params?: RequestArgumentsParams\n  ): Promise<T> {\n    try {\n      const response = await fetch('https://walletconnect-api.grindery.com', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method,\n          params: params || [],\n        }),\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new ProviderError(data.error.message, data.error.code);\n      }\n      if (!data.result) {\n        throw new ProviderError('No result', 4900);\n      }\n      return data.result;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n}\n","import { ProviderEventEmitter } from './ProviderEventEmitter';\nimport { ProviderStorage, ProviderStorageKey } from './types';\n\nconst LOCALSTORAGE_KEY = 'GrinderyWalletProvider';\n\nexport class ProviderLocalStorage extends ProviderEventEmitter {\n  protected getStorageValue(key: ProviderStorageKey): string {\n    const value = this.getStorage()[key] || '';\n    return value;\n  }\n\n  protected setStorageValue(key: ProviderStorageKey, value: string): void {\n    const storage = this.getStorage();\n    storage[key] = value;\n    this.saveStorage(storage);\n  }\n\n  private getStorage(): ProviderStorage {\n    try {\n      return JSON.parse(\n        localStorage.getItem(LOCALSTORAGE_KEY) || '{}'\n      ) as ProviderStorage;\n    } catch (error) {\n      localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify({}));\n      throw new Error('Error parsing storage');\n    }\n  }\n\n  private saveStorage(storage: ProviderStorage): void {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(storage));\n  }\n}\n","export class ProviderEventEmitter {\n  private events: Map<string, Array<Function>>;\n\n  constructor() {\n    this.events = new Map();\n  }\n\n  on(event: string, callback: Function) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)!.push(callback);\n    return this;\n  }\n\n  removeListener(event: string, callback: Function) {\n    if (this.events.has(event)) {\n      const callbacks = this.events.get(event)!.filter(cb => cb !== callback);\n      this.events.set(event, callbacks);\n    }\n    return this;\n  }\n\n  protected emit(event: string, ...data: any[]) {\n    if (this.events.has(event)) {\n      console.log('[GrinderyWalletProvider] > Event:', event, data);\n      this.events.get(event)!.forEach(callback => {\n        callback(...data);\n      });\n    }\n    return this;\n  }\n}\n","import { GrinderyWalletProvider } from '../provider/GrinderyWalletProvider';\n\nexport class GrinderyWalletSDK {\n  public provider: GrinderyWalletProvider;\n\n  constructor() {\n    this.provider = this.getWeb3Provider();\n  }\n\n  private getWeb3Provider(): GrinderyWalletProvider {\n    let provider = window.ethereum?.providers?.find(\n      (provider: GrinderyWalletProvider | unknown) =>\n        provider instanceof GrinderyWalletProvider && provider.isGrinderyWallet\n    );\n    if (\n      !provider &&\n      window.ethereum instanceof GrinderyWalletProvider &&\n      window.ethereum.isGrinderyWallet\n    ) {\n      provider = window.ethereum;\n    }\n    if (!provider) {\n      provider = new GrinderyWalletProvider();\n    }\n    return provider;\n  }\n}\n","import { GrinderyWalletSDK } from './sdk/GrinderyWalletSDK';\n\ndeclare global {\n  interface Window {\n    Telegram?: any;\n    ethereum?: any;\n    Grindery?: {\n      WalletSDK?: GrinderyWalletSDK;\n    };\n  }\n}\n\nfunction init() {\n  if (\n    !window.Grindery?.WalletSDK ||\n    !(window.Grindery.WalletSDK instanceof GrinderyWalletSDK)\n  ) {\n    window.Grindery = {\n      ...(window.Grindery || {}),\n      WalletSDK: new GrinderyWalletSDK(),\n    };\n  }\n}\n\n// Initialize the SDK when the page is loaded\ninit();\n"],"names":["ProviderError","_Error","message","code","data","_this","call","_inheritsLoose","_wrapNativeSuper","Error","GrinderyWalletProvider","_ProviderLocalStorage","_execute6","_execute5","_execute4","_execute3","_execute2","_execute","window","location","origin","eth_requestAccounts","sessionRequired","pairingTokenRequired","execute","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","pairResult","result","_pairResult","wrap","_context","prev","next","isWalletConnected","request","method","abrupt","sent","t0","setStorageValue","isWalletConnectionPending","emit","connectUrl","getStorageValue","connectUrlBrowser","pairingToken","sessionId","t1","appId","sendGrinderyRpcApiRequest","scope","chainId","t2","createProviderRpcError","stop","_x","apply","arguments","checkout_requestPairing","_callee2","_context2","_x2","checkout_waitForPairingResult","_callee3","_context3","_x3","eth_accounts","_callee4","_context4","_x4","eth_sendTransaction","_callee5","_context5","_x5","personal_sign","_callee6","_context6","_x6","injectProvider","_proto","prototype","isConnected","this","_request","_callee7","_ref","_context7","methods","_x7","ethereum","providers","Array","isArray","push","addEventListener","setTimeout","_this2","error","errorResponse","_sendGrinderyRpcApiRequest","_callee8","response","_context8","fetch","headers","Content-Type","body","JSON","stringify","jsonrpc","id","json","_x8","_x9","_ProviderEventEmitter","ProviderLocalStorage","key","getStorage","value","storage","saveStorage","parse","localStorage","getItem","setItem","ProviderEventEmitter","events","Map","on","event","callback","has","set","get","removeListener","callbacks","filter","cb","_len","_key","console","log","forEach","GrinderyWalletSDK","provider","getWeb3Provider","_window$ethereum","find","isGrinderyWallet","_window$Grindery","Grindery","WalletSDK","_extends"],"mappings":"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"}