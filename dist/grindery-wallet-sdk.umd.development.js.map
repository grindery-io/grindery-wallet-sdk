{"version":3,"file":"grindery-wallet-sdk.umd.development.js","sources":["../src/provider/ProviderError.ts","../src/provider/ProviderEventEmitter.ts","../src/provider/ProviderLocalStorage.ts","../src/provider/GrinderyWalletProvider.ts","../src/sdk/GrinderyWalletSDK.ts","../src/index.ts"],"sourcesContent":["export class ProviderError extends Error {\n  name: string = 'GrinderyWalletProviderError';\n  code?: number;\n  data?: unknown;\n\n  constructor(message: string, code?: number, data?: unknown) {\n    super(message);\n    this.code = code;\n    this.data = data;\n  }\n}\n","export class ProviderEventEmitter {\n  private events: Map<string, Array<Function>>;\n\n  constructor() {\n    this.events = new Map();\n  }\n\n  on(event: string, callback: Function) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)!.push(callback);\n    return this;\n  }\n\n  removeListener(event: string, callback: Function) {\n    if (this.events.has(event)) {\n      const callbacks = this.events.get(event)!.filter(cb => cb !== callback);\n      this.events.set(event, callbacks);\n    }\n    return this;\n  }\n\n  protected emit(event: string, ...data: any[]) {\n    if (this.events.has(event)) {\n      console.log('[GrinderyWalletProvider] > Event:', event, data);\n      this.events.get(event)!.forEach(callback => {\n        callback(...data);\n      });\n    }\n    return this;\n  }\n}\n","import { ProviderEventEmitter } from './ProviderEventEmitter';\nimport { ProviderStorage, ProviderStorageKey } from './types';\n\nconst LOCALSTORAGE_KEY = 'GrinderyWalletProvider';\n\nexport class ProviderLocalStorage extends ProviderEventEmitter {\n  constructor() {\n    super();\n    const userId = this.getStorageValue('userId');\n    if (!userId) {\n      this.setStorageValue(\n        'userId',\n        window.Telegram?.WebApp?.initDataUnsafe?.user?.id || ''\n      );\n    }\n  }\n\n  protected getStorageValue(key: ProviderStorageKey): string {\n    const value = this.getStorage()[key] || '';\n    return value;\n  }\n\n  protected setStorageValue(key: ProviderStorageKey, value: string): void {\n    const storage = this.getStorage();\n    storage[key] = value;\n    this.saveStorage(storage);\n  }\n\n  private getStorage(): ProviderStorage {\n    try {\n      return JSON.parse(\n        localStorage.getItem(LOCALSTORAGE_KEY) || '{}'\n      ) as ProviderStorage;\n    } catch (error) {\n      localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify({}));\n      throw new Error('Error parsing storage');\n    }\n  }\n\n  private saveStorage(storage: ProviderStorage): void {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(storage));\n  }\n}\n","import { ProviderError } from './ProviderError';\nimport { ProviderLocalStorage } from './ProviderLocalStorage';\nimport {\n  AppData,\n  ProviderInterface,\n  ProviderMethods,\n  RequestArguments,\n  RequestArgumentsParams,\n} from './types';\n\nexport class GrinderyWalletProvider extends ProviderLocalStorage\n  implements ProviderInterface {\n  public readonly isGrinderyWallet: boolean = true;\n\n  constructor() {\n    super();\n    this.appData = {\n      name: document.title,\n      uri: `gw:${btoa(window.location.origin)}`,\n    };\n\n    this.injectProvider();\n  }\n\n  public isConnected(): boolean {\n    return !!this.chainId;\n  }\n\n  public isAccountsConnected(): boolean {\n    return this.accounts.length > 0;\n  }\n\n  public async request<T>({ method, params }: RequestArguments): Promise<T> {\n    if (method !== 'wallet_ping' && !this.chainId) {\n      throw new ProviderError('Disconnected', 4900);\n    }\n    if (!this.methods[method]) {\n      throw new ProviderError('Unsupported Method', 4200);\n    }\n\n    try {\n      return (await this.methods[method](params)) as T;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  private accessToken: string = '';\n  private accounts: string[] = [];\n  private appData: AppData;\n  private chainId: string = '';\n\n  /* Avaialble `request` methods */\n  private methods: ProviderMethods = {\n    eth_accounts: async (_?: RequestArgumentsParams): Promise<string[]> => {\n      if (!this.accessToken || this.accounts.length === 0) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      return this.accounts;\n    },\n    eth_requestAccounts: async (\n      params?: RequestArgumentsParams\n    ): Promise<string[]> => {\n      if (this.accessToken && this.accounts.length > 0) {\n        return this.accounts;\n      }\n      try {\n        const result = await this.sendGrinderyRpcApiRequest<{\n          success: boolean;\n          address?: string;\n          sessionToken?: string;\n        }>('pair', {\n          ...params,\n          uri: this.appData.uri,\n          userId: this.getStorageValue('userId'),\n        });\n        if (\n          result.success &&\n          result.address &&\n          new RegExp(/^0x[0-9a-fA-F]{40}$/).test(result.address)\n        ) {\n          this.setStorageValue('address', result.address);\n          this.accounts = [result.address];\n          this.emit('accountsChanged', { accounts: this.accounts });\n          return this.accounts;\n        }\n        throw new ProviderError('Pairing failed', 4900);\n      } catch (error) {\n        throw this.createProviderRpcError(error);\n      }\n    },\n    eth_sendTransaction: async (\n      params?: RequestArgumentsParams\n    ): Promise<string[]> => {\n      if (!this.accessToken || this.accounts.length === 0) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      return await this.sendGrinderyRpcApiRequest<string[]>(\n        'eth_sendTransaction',\n        params\n      );\n    },\n  };\n\n  private injectProvider(): void {\n    if (!window.ethereum) {\n      window.ethereum = this;\n    } else {\n      if (\n        window.ethereum.providers &&\n        Array.isArray(window.ethereum.providers)\n      ) {\n        window.ethereum.providers.push(this);\n      } else {\n        window.ethereum.providers = [window.ethereum, this];\n      }\n    }\n\n    this.connect();\n  }\n\n  private async connect(): Promise<void> {\n    try {\n      // TODO replace with real async handshake?\n      setTimeout(() => {\n        this.chainId = '0x89';\n        if (this.getStorageValue('address')) {\n          this.accounts = [this.getStorageValue('address')];\n        }\n        this.emit('connect', { chainId: this.chainId });\n      }, 100);\n    } catch (error) {\n      this.emit('disconnect', { error: this.createProviderRpcError(error) });\n    }\n  }\n\n  private createProviderRpcError(error: unknown): ProviderError {\n    let errorResponse: ProviderError;\n    if (error instanceof ProviderError) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = error.code || 4900;\n      errorResponse.data = error.data;\n    } else if (error instanceof Error) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = 4900;\n    } else {\n      errorResponse = new ProviderError('Unknown error');\n      errorResponse.code = 4900;\n    }\n    return errorResponse;\n  }\n\n  private async sendGrinderyRpcApiRequest<T>(\n    method: string,\n    params?: RequestArgumentsParams\n  ): Promise<T> {\n    try {\n      const response = await fetch('https://walletconnect-api.grindery.com', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method,\n          params,\n        }),\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new ProviderError(data.error.message, data.error.code);\n      }\n      if (!data.result) {\n        throw new ProviderError('No result', 4900);\n      }\n      return data.result;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n}\n","import { GrinderyWalletProvider } from '../provider/GrinderyWalletProvider';\n\nexport class GrinderyWalletSDK {\n  public provider: GrinderyWalletProvider;\n\n  constructor() {\n    this.provider = this.getWeb3Provider();\n  }\n\n  private getWeb3Provider(): GrinderyWalletProvider {\n    let provider = window.ethereum?.providers?.find(\n      (provider: GrinderyWalletProvider | unknown) =>\n        provider instanceof GrinderyWalletProvider && provider.isGrinderyWallet\n    );\n    if (\n      !provider &&\n      window.ethereum instanceof GrinderyWalletProvider &&\n      window.ethereum.isGrinderyWallet\n    ) {\n      provider = window.ethereum;\n    }\n    if (!provider) {\n      provider = new GrinderyWalletProvider();\n    }\n    return provider;\n  }\n}\n","import { GrinderyWalletSDK } from './sdk/GrinderyWalletSDK';\n\ndeclare global {\n  interface Window {\n    Telegram?: any;\n    ethereum?: any;\n    Grindery?: {\n      WalletSDK?: GrinderyWalletSDK;\n    };\n  }\n}\n\nfunction init(_: Event) {\n  if (\n    !window.Grindery?.WalletSDK ||\n    !(window.Grindery.WalletSDK instanceof GrinderyWalletSDK)\n  ) {\n    window.Grindery = {\n      ...(window.Grindery || {}),\n      WalletSDK: new GrinderyWalletSDK(),\n    };\n  }\n}\n\n// Initialize the SDK when the page is loaded\naddEventListener('load', init);\n"],"names":["ProviderError","_Error","message","code","data","_this","call","_inheritsLoose","_wrapNativeSuper","Error","ProviderEventEmitter","events","Map","_proto","prototype","on","event","callback","has","set","get","push","removeListener","callbacks","filter","cb","emit","Array","_len","_key","arguments","console","log","forEach","apply","LOCALSTORAGE_KEY","ProviderLocalStorage","_ProviderEventEmitter","userId","getStorageValue","_window$Telegram","setStorageValue","window","Telegram","WebApp","initDataUnsafe","user","id","key","value","getStorage","storage","saveStorage","JSON","parse","localStorage","getItem","error","setItem","stringify","GrinderyWalletProvider","_ProviderLocalStorage","eth_accounts","_eth_accounts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","wrap","_callee$","_context","prev","next","accessToken","accounts","length","abrupt","stop","_x","eth_requestAccounts","_eth_requestAccounts","_callee2","params","result","_callee2$","_context2","sendGrinderyRpcApiRequest","_extends","uri","appData","sent","success","address","RegExp","test","t0","createProviderRpcError","_x2","eth_sendTransaction","_eth_sendTransaction","_callee3","_callee3$","_context3","_x3","name","document","title","btoa","location","origin","injectProvider","isConnected","chainId","isAccountsConnected","request","_request","_callee4","_ref","method","_callee4$","_context4","methods","_x4","ethereum","providers","isArray","connect","_connect","_callee5","_this2","_callee5$","_context5","setTimeout","errorResponse","_sendGrinderyRpcApiRequest","_callee6","response","_callee6$","_context6","fetch","headers","body","jsonrpc","json","_x5","_x6","GrinderyWalletSDK","provider","getWeb3Provider","_window$ethereum","find","isGrinderyWallet","init","_window$Grindery","Grindery","WalletSDK","addEventListener"],"mappings":"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"}