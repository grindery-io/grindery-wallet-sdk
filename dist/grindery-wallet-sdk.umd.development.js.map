{"version":3,"file":"grindery-wallet-sdk.umd.development.js","sources":["../src/provider/ProviderError.ts","../src/provider/ProviderEventEmitter.ts","../src/provider/ProviderLocalStorage.ts","../src/provider/GrinderyWalletProvider.ts","../src/sdk/GrinderyWalletSDK.ts","../src/index.ts"],"sourcesContent":["export class ProviderError extends Error {\n  name: string = 'GrinderyWalletProviderError';\n  code?: number;\n  data?: unknown;\n\n  constructor(message: string, code?: number, data?: unknown) {\n    super(message);\n    this.code = code;\n    this.data = data;\n  }\n}\n","export class ProviderEventEmitter {\n  private events: Map<string, Array<Function>>;\n\n  constructor() {\n    this.events = new Map();\n  }\n\n  on(event: string, callback: Function) {\n    if (!this.events.has(event)) {\n      this.events.set(event, []);\n    }\n    this.events.get(event)!.push(callback);\n    return this;\n  }\n\n  removeListener(event: string, callback: Function) {\n    if (this.events.has(event)) {\n      const callbacks = this.events.get(event)!.filter(cb => cb !== callback);\n      this.events.set(event, callbacks);\n    }\n    return this;\n  }\n\n  protected emit(event: string, ...data: any[]) {\n    if (this.events.has(event)) {\n      console.log('[GrinderyWalletProvider] > Event:', event, data);\n      this.events.get(event)!.forEach(callback => {\n        callback(...data);\n      });\n    }\n    return this;\n  }\n}\n","import { ProviderEventEmitter } from './ProviderEventEmitter';\nimport { ProviderStorage, ProviderStorageKey } from './types';\n\nconst LOCALSTORAGE_KEY = 'GrinderyWalletProvider';\n\nexport class ProviderLocalStorage extends ProviderEventEmitter {\n  protected getStorageValue(key: ProviderStorageKey): string {\n    const value = this.getStorage()[key] || '';\n    return value;\n  }\n\n  protected setStorageValue(key: ProviderStorageKey, value: string): void {\n    const storage = this.getStorage();\n    storage[key] = value;\n    this.saveStorage(storage);\n  }\n\n  private getStorage(): ProviderStorage {\n    try {\n      return JSON.parse(\n        localStorage.getItem(LOCALSTORAGE_KEY) || '{}'\n      ) as ProviderStorage;\n    } catch (error) {\n      localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify({}));\n      throw new Error('Error parsing storage');\n    }\n  }\n\n  private saveStorage(storage: ProviderStorage): void {\n    localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(storage));\n  }\n}\n","import { ProviderError } from './ProviderError';\nimport { ProviderLocalStorage } from './ProviderLocalStorage';\nimport {\n  GrinderyRpcMethodName,\n  GrinderyRpcProviderRequestMethodName,\n  ProviderInterface,\n  ProviderMethods,\n  ProviderPairingResult,\n  ProviderRequestPairingResult,\n  ProviderRequestResult,\n  RequestArguments,\n  RequestArgumentsParams,\n} from './types';\n\nexport class GrinderyWalletProvider extends ProviderLocalStorage\n  implements ProviderInterface {\n  public readonly isGrinderyWallet: boolean = true;\n\n  constructor() {\n    super();\n    this.injectProvider();\n  }\n\n  public isConnected(): boolean {\n    return !!this.chainId;\n  }\n\n  public isWalletConnected(): boolean {\n    return this.isConnected() && !!this.getStorageValue('sessionId');\n  }\n\n  public isWalletConnectionPending(): boolean {\n    return this.isConnected() && !!this.getStorageValue('pairingToken');\n  }\n\n  public async request<T>({ method, params }: RequestArguments): Promise<T> {\n    if (method !== 'wallet_ping' && !this.chainId) {\n      throw new ProviderError('Disconnected', 4900);\n    }\n    if (!this.methods[method]) {\n      throw new ProviderError('Unsupported Method', 4200);\n    }\n\n    try {\n      if (this.methods[method].sessionRequired && !this.isWalletConnected()) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      if (\n        this.methods[method].pairingTokenRequired &&\n        !this.isWalletConnectionPending()\n      ) {\n        throw new ProviderError('Unauthorized', 4900);\n      }\n      return (await this.methods[method].execute(params)) as T;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  private appId: string = window.location.origin || 'localhost';\n  private chainId: string = 'eip155:137';\n\n  /* Avaialble provider `request` methods */\n  private methods: ProviderMethods = {\n    eth_requestAccounts: {\n      sessionRequired: false,\n      pairingTokenRequired: false,\n      execute: async (params?: RequestArgumentsParams): Promise<string[]> => {\n        if (this.isWalletConnected()) {\n          try {\n            return await this.request<string[]>({\n              method: 'eth_accounts',\n              params: params || [],\n            });\n          } catch (error) {\n            this.setStorageValue('sessionId', '');\n            // skip failed request and continue with pairing\n          }\n        }\n        if (this.isWalletConnectionPending()) {\n          try {\n            this.emit('restorePairing', {\n              connectUrl: this.getStorageValue('connectUrl'),\n              connectUrlBrowser: this.getStorageValue('connectUrlBrowser'),\n            });\n\n            const pairResult = await this.request<ProviderPairingResult>({\n              method: 'checkout_waitForPairingResult',\n              params: { pairingToken: this.getStorageValue('pairingToken') },\n            });\n\n            this.setStorageValue('sessionId', pairResult.sessionId);\n            this.setStorageValue('pairingToken', '');\n            this.setStorageValue('connectUrl', '');\n            this.setStorageValue('connectUrlBrowser', '');\n\n            if (!pairResult.sessionId) {\n              throw new ProviderError('Pairing failed', 4900);\n            }\n\n            return [];\n          } catch (error) {\n            this.setStorageValue('sessionId', '');\n            this.setStorageValue('pairingToken', '');\n            this.setStorageValue('connectUrl', '');\n            this.setStorageValue('connectUrlBrowser', '');\n            // skip failed request and continue with pairing\n          }\n        }\n        try {\n          const result = await this.request<ProviderRequestPairingResult>({\n            method: 'checkout_requestPairing',\n            params: { appId: this.appId },\n          });\n\n          if (!result.pairingToken || !result.connectUrl) {\n            throw new ProviderError('Pairing failed', 4900);\n          }\n\n          this.setStorageValue('pairingToken', result.pairingToken);\n          this.setStorageValue('connectUrl', result.connectUrl);\n          this.setStorageValue('connectUrlBrowser', result.connectUrlBrowser);\n          this.emit('pairing', {\n            connectUrl: result.connectUrl,\n            connectUrlBrowser: result.connectUrlBrowser,\n          });\n          const pairResult = await this.request<ProviderPairingResult>({\n            method: 'checkout_waitForPairingResult',\n            params: { pairingToken: result.pairingToken },\n          });\n\n          this.setStorageValue('sessionId', pairResult.sessionId);\n\n          if (!pairResult.sessionId) {\n            throw new ProviderError('Pairing failed', 4900);\n          }\n          return await this.sendGrinderyRpcApiRequest<string[]>(\n            'checkout_request',\n            {\n              sessionId: pairResult.sessionId,\n              scope: this.chainId,\n              request: {\n                method: 'eth_accounts',\n                params: [],\n              },\n            }\n          );\n        } catch (error) {\n          throw this.createProviderRpcError(error);\n        }\n      },\n    },\n    checkout_requestPairing: {\n      sessionRequired: false,\n      pairingTokenRequired: false,\n      execute: async (\n        params?: RequestArgumentsParams\n      ): Promise<ProviderRequestPairingResult> => {\n        return await this.sendGrinderyRpcApiRequest<\n          ProviderRequestPairingResult\n        >('checkout_requestPairing', params);\n      },\n    },\n    checkout_waitForPairingResult: {\n      sessionRequired: false,\n      pairingTokenRequired: true,\n      execute: async (\n        params?: RequestArgumentsParams\n      ): Promise<ProviderRequestPairingResult> => {\n        return await this.sendGrinderyRpcApiRequest<\n          ProviderRequestPairingResult\n        >('checkout_waitForPairingResult', params);\n      },\n    },\n    eth_accounts: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (\n        params?: RequestArgumentsParams\n      ): Promise<ProviderRequestResult> => {\n        return await this.sendGrinderyRpcProviderRequest(\n          'eth_accounts',\n          params ? (Array.isArray(params) ? params : [params]) : []\n        );\n      },\n    },\n    eth_sendTransaction: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (\n        params?: RequestArgumentsParams\n      ): Promise<ProviderRequestResult> => {\n        if (!this.isWalletConnected()) {\n          throw new ProviderError('Unauthorized', 4900);\n        }\n        return await this.sendGrinderyRpcProviderRequest(\n          'eth_sendTransaction',\n          params ? (Array.isArray(params) ? params : [params]) : []\n        );\n      },\n    },\n    personal_sign: {\n      sessionRequired: true,\n      pairingTokenRequired: false,\n      execute: async (\n        params?: Partial<RequestArgumentsParams>\n      ): Promise<{ requestToken: string }> => {\n        if (!this.isWalletConnected()) {\n          throw new ProviderError('Unauthorized', 4900);\n        }\n        return await this.sendGrinderyRpcProviderRequest(\n          'personal_sign',\n          params ? (Array.isArray(params) ? params : [params]) : []\n        );\n      },\n    },\n  };\n\n  private async sendGrinderyRpcProviderRequest(\n    method: GrinderyRpcProviderRequestMethodName,\n    params?: readonly unknown[]\n  ): Promise<ProviderRequestResult> {\n    if (!this.getStorageValue('sessionId')) {\n      throw new ProviderError('Unauthorized', 4900);\n    }\n    try {\n      return await this.sendGrinderyRpcApiRequest<ProviderRequestResult>(\n        'checkout_request',\n        {\n          sessionId: this.getStorageValue('sessionId'),\n          scope: this.chainId,\n          request: {\n            method,\n            params,\n          },\n        }\n      );\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  // waitForRequestResult\n\n  private async sendGrinderyRpcApiRequest<T>(\n    method: GrinderyRpcMethodName,\n    params?: RequestArgumentsParams\n  ): Promise<T> {\n    try {\n      const response = await fetch('https://walletconnect-api.grindery.com', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          jsonrpc: '2.0',\n          id: 1,\n          method,\n          params: params || [],\n        }),\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new ProviderError(data.error.message, data.error.code);\n      }\n      if (!data.result) {\n        throw new ProviderError('No result', 4900);\n      }\n      return data.result;\n    } catch (error) {\n      throw this.createProviderRpcError(error);\n    }\n  }\n\n  private createProviderRpcError(error: unknown): ProviderError {\n    let errorResponse: ProviderError;\n    if (error instanceof ProviderError) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = error.code || 4900;\n      errorResponse.data = error.data;\n    } else if (error instanceof Error) {\n      errorResponse = new ProviderError(error.message || 'Unknown error');\n      errorResponse.code = 4900;\n    } else {\n      errorResponse = new ProviderError('Unknown error');\n      errorResponse.code = 4900;\n    }\n    return errorResponse;\n  }\n\n  private injectProvider(): void {\n    if (!window.ethereum) {\n      window.ethereum = this;\n    } else {\n      if (\n        window.ethereum.providers &&\n        Array.isArray(window.ethereum.providers)\n      ) {\n        window.ethereum.providers.push(this);\n      } else {\n        window.ethereum.providers = [window.ethereum, this];\n      }\n    }\n\n    addEventListener('load', () => {\n      this.emit('connect', { chainId: this.chainId });\n    });\n  }\n}\n","import { GrinderyWalletProvider } from '../provider/GrinderyWalletProvider';\n\nexport class GrinderyWalletSDK {\n  public provider: GrinderyWalletProvider;\n\n  constructor() {\n    this.provider = this.getWeb3Provider();\n  }\n\n  private getWeb3Provider(): GrinderyWalletProvider {\n    let provider = window.ethereum?.providers?.find(\n      (provider: GrinderyWalletProvider | unknown) =>\n        provider instanceof GrinderyWalletProvider && provider.isGrinderyWallet\n    );\n    if (\n      !provider &&\n      window.ethereum instanceof GrinderyWalletProvider &&\n      window.ethereum.isGrinderyWallet\n    ) {\n      provider = window.ethereum;\n    }\n    if (!provider) {\n      provider = new GrinderyWalletProvider();\n    }\n    return provider;\n  }\n}\n","import { GrinderyWalletSDK } from './sdk/GrinderyWalletSDK';\n\ndeclare global {\n  interface Window {\n    Telegram?: any;\n    ethereum?: any;\n    Grindery?: {\n      WalletSDK?: GrinderyWalletSDK;\n    };\n  }\n}\n\nfunction init() {\n  if (\n    !window.Grindery?.WalletSDK ||\n    !(window.Grindery.WalletSDK instanceof GrinderyWalletSDK)\n  ) {\n    window.Grindery = {\n      ...(window.Grindery || {}),\n      WalletSDK: new GrinderyWalletSDK(),\n    };\n  }\n}\n\n// Initialize the SDK when the page is loaded\ninit();\n"],"names":["ProviderError","_Error","message","code","data","_this","call","_inheritsLoose","_wrapNativeSuper","Error","ProviderEventEmitter","events","Map","_proto","prototype","on","event","callback","has","set","get","push","removeListener","callbacks","filter","cb","emit","Array","_len","_key","arguments","console","log","forEach","apply","LOCALSTORAGE_KEY","ProviderLocalStorage","_ProviderEventEmitter","getStorageValue","key","value","getStorage","setStorageValue","storage","saveStorage","JSON","parse","localStorage","getItem","error","setItem","stringify","GrinderyWalletProvider","_ProviderLocalStorage","window","location","origin","eth_requestAccounts","sessionRequired","pairingTokenRequired","execute","_execute","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","pairResult","result","_pairResult","wrap","_callee$","_context","prev","next","isWalletConnected","request","method","abrupt","sent","t0","isWalletConnectionPending","connectUrl","connectUrlBrowser","pairingToken","sessionId","t1","appId","sendGrinderyRpcApiRequest","scope","chainId","t2","createProviderRpcError","stop","_x","checkout_requestPairing","_execute2","_callee2","_callee2$","_context2","_x2","checkout_waitForPairingResult","_execute3","_callee3","_callee3$","_context3","_x3","eth_accounts","_execute4","_callee4","_callee4$","_context4","sendGrinderyRpcProviderRequest","isArray","_x4","eth_sendTransaction","_execute5","_callee5","_callee5$","_context5","_x5","personal_sign","_execute6","_callee6","_callee6$","_context6","_x6","injectProvider","isConnected","_request","_callee7","_ref","_callee7$","_context7","methods","_x7","_sendGrinderyRpcProviderRequest","_callee8","_callee8$","_context8","_x8","_x9","_sendGrinderyRpcApiRequest","_callee9","response","_callee9$","_context9","fetch","headers","body","jsonrpc","id","json","_x10","_x11","errorResponse","ethereum","providers","addEventListener","_this2","GrinderyWalletSDK","provider","getWeb3Provider","_window$ethereum","find","isGrinderyWallet","init","_window$Grindery","Grindery","WalletSDK","_extends"],"mappings":"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"}